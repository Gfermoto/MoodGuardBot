// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –æ—Ç–≤–µ—Ç —è–≤–ª—è–µ—Ç—Å—è JSON, –∞ –Ω–µ HTML
if (typeof msg.payload === 'string' && msg.payload.includes('<!DOCTYPE html>')) {
    node.warn('API –≤–µ—Ä–Ω—É–ª HTML –≤–º–µ—Å—Ç–æ JSON. –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.');
    return null;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ HTTP-–æ—Ç–≤–µ—Ç–∞
if (msg.statusCode !== 200) {
    node.warn(`–û—à–∏–±–∫–∞ API: —Å—Ç–∞—Ç—É—Å ${msg.statusCode}`);
    return null;
}

// –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
node.warn("–û—Ç–≤–µ—Ç –æ—Ç API: " + JSON.stringify(msg.payload, null, 2));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ JSON-–æ—Ç–≤–µ—Ç–∞
if (msg.payload.error) {
    node.warn(`–û—à–∏–±–∫–∞ API: ${msg.payload.error}`);
    return null;
} else if (Array.isArray(msg.payload) && msg.payload.length > 0) {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    const results = msg.payload[0];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ results —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º
    if (Array.isArray(results) && results.length > 0) {
        // –ò—â–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é (score)
        const topResult = results.reduce((prev, current) => {
            return (prev.score > current.score) ? prev : current;
        });

        // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
        node.warn(`–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: ${topResult.label} (${topResult.score})`);

        if (topResult.label === "negative" && topResult.score > 0.8) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏
            try {
                // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
                const replyMessage = {
                    chatId: msg.chatId || "–í–°–¢–ê–í–¨–¢–ï –°–í–û–ô ID –ß–ê–¢–ê", // –ò—Å–ø–æ–ª—å–∑—É–µ–º chatId –∏–∑ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –≤–∞—à ID —á–∞—Ç–∞
                    message_thread_id: msg.message_thread_id, // –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø–∏–∫, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
                    type: "message",
                    content: "–≠–π, –Ω–µ —Å—Ç–æ–∏—Ç –±—ã—Ç—å —Ç–∞–∫–∏–º –¥—É—à–Ω—ã–º! üòä"
                };

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ message_thread_id –ø–µ—Ä–µ–¥–∞–Ω
                if (!replyMessage.message_thread_id) {
                    node.warn("–û—à–∏–±–∫–∞: message_thread_id –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤—Ö–æ–¥—è—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏. –û—Ç–ø—Ä–∞–≤–ª—è—é –≤ –æ–±—â–∏–π —á–∞—Ç.");
                }

                node.warn("–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram: " + JSON.stringify(replyMessage, null, 2));
                node.warn("–û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram...");

                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                return { payload: replyMessage };
            } catch (error) {
                node.warn(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`);
                return null;
            }
        } else {
            node.warn("–¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ –Ω–µ–≥–∞—Ç–∏–≤–Ω–∞—è –∏–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏ —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∞—è.");
            return null; // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        }
    } else {
        node.warn("–û—à–∏–±–∫–∞: –≤–ª–æ–∂–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ results –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º");
        return null;
    }
} else {
    node.warn("–û—à–∏–±–∫–∞: –æ—Ç–≤–µ—Ç API –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º");
    return null;
}
